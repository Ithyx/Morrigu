name: CMake

on:
  pull_request:
    branches:
      - main



jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 2
      continue-on-error: true
      matrix:
        include:
          # # Windows config
          # - os: windows-latest
          #   CONAN_INSTALL_TOOL: choco
          # Ubuntu configs
          - os: ubuntu-20.04
            compiler: clang
            compilerVersion: 9
            CONAN_INSTALL_TOOL: pip3
          - os: ubuntu-20.04
            compiler: gcc
            compilerVersion: 9
            CONAN_INSTALL_TOOL: pip3
          # # MacOS configs
          # - os: macos-latest
          #   compiler: clang
          #   compilerVersion: 10
          #   CONAN_INSTALL_TOOL: brew
          # - os: macos-latest
          #   compiler: gcc
          #   compilerVersion: 9
          #   CONAN_INSTALL_TOOL: brew

    steps:
    - uses: actions/checkout@v2
    
    - name: Create Build Environment
      working-directory: ${{runner.workspace}}/Morrigu
      shell: bash
      run: mkdir build

    # Conan setup
    - name: Install conan
      shell: bash
      run: ${{ matrix.CONAN_INSTALL_TOOL }} install conan

    - name: add conan to path
      if: matrix.os != 'windows-latest' 
      shell: bash
      run: echo "::add-path::~/.local/bin"
    
    - name: configure conan new profile
      shell: bash
      run: conan profile new default --detect

    - name: configure conan C++ ABI
      shell: bash
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
    
    - name: configure conan C++ compiler
      if: matrix.os != 'windows-latest'
      shell: bash
      run: |
        conan profile update settings.compiler=${{ matrix.compiler }} default
        conan profile update settings.compiler.version=${{ matrix.compilerVersion }} default
    
    - name: add conan remotes
      shell: bash
      run: |
        conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
        conan remote add ImGui-Docking https://api.bintray.com/conan/ithyx/imgui
    
    - name: conan install [DEBUG]
      shell: bash
      working-directory: ${{runner.workspace}}/Morrigu/build
      run: conan install .. -s build_type=Debug --build=missing
    
    - name: conan install [Release]
      shell: bash
      working-directory: ${{runner.workspace}}/Morrigu/build
      run: conan install .. -s build_type=Release --build=missing

    # Cmake setup
    - name: Configure CMake (non-windows) [DEBUG]
      if: matrix.os != 'windows-latest'
      shell: bash
      working-directory: ${{runner.workspace}}/Morrigu/build
      run: cmake .. -DCMAKE_BUILD_TYPE=Debug
      env:
        CXX: ${{ matrix.compiler }}-${{ matrix.compilerVersion }}

    - name: Configure CMake (windows) [DEBUG]
      if: matrix.os == 'windows-latest'
      shell: bash
      working-directory: ${{runner.workspace}}/Morrigu/build
      run: cmake ..
    
    - name: Build (non-windows) [DEBUG]
      if: matrix.os != 'windows-latest'
      working-directory: ${{runner.workspace}}/Morrigu/build
      shell: bash
      run: cmake --build .
      env:
        CXX: ${{ matrix.compiler }}-${{ matrix.compilerVersion }}
    
    - name: Build (windows) [DEBUG]
      if: matrix.os == 'windows-latest'
      working-directory: ${{runner.workspace}}/Morrigu/build
      shell: bash
      run: cmake --build . --config Debug
    
    - name: Configure CMake (non-windows) [RELEASE]
      if: matrix.os != 'windows-latest'
      shell: bash
      working-directory: ${{runner.workspace}}/Morrigu/build
      run: cmake .. -DCMAKE_BUILD_TYPE=Release
      env:
        CXX: ${{ matrix.compiler }}-${{ matrix.compilerVersion }}

    - name: Build (non-windows) [RELEASE]
      if: matrix.os != 'windows-latest'
      working-directory: ${{runner.workspace}}/Morrigu/build
      shell: bash
      run: cmake --build .
      env:
        CXX: ${{ matrix.compiler }}-${{ matrix.compilerVersion }}
    
    - name: Build (windows) [RELEASE]
      if: matrix.os == 'windows-latest'
      working-directory: ${{runner.workspace}}/Morrigu/build
      shell: bash
      run: cmake --build . --config Release
